{
  "version": 3,
  "sources": ["../../vuetify/src/components/VRating/VRating.tsx"],
  "sourcesContent": ["// Styles\nimport './VRating.sass'\n\n// Components\nimport { VBtn } from '@/components/VBtn'\n\n// Composables\nimport { makeComponentProps } from '@/composables/component'\nimport { makeDensityProps } from '@/composables/density'\nimport { IconValue } from '@/composables/icons'\nimport { useLocale } from '@/composables/locale'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { makeSizeProps } from '@/composables/size'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\n\n// Utilities\nimport { computed, shallowRef } from 'vue'\nimport { clamp, createRange, genericComponent, getUid, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { Prop } from 'vue'\nimport type { Variant } from '@/composables/variant'\n\ntype VRatingItemSlot = {\n  value: number\n  index: number\n  isFilled: boolean\n  isHovered: boolean\n  icon: IconValue\n  color?: string\n  props: Record<string, unknown>\n  rating: number\n}\n\ntype VRatingItemLabelSlot = {\n  value: number\n  index: number\n  label?: string\n}\n\ntype VRatingSlots = {\n  item: VRatingItemSlot\n  'item-label': VRatingItemLabelSlot\n}\n\nexport const makeVRatingProps = propsFactory({\n  name: String,\n  itemAriaLabel: {\n    type: String,\n    default: '$vuetify.rating.ariaLabel.item',\n  },\n  activeColor: String,\n  color: String,\n  clearable: Boolean,\n  disabled: Boolean,\n  emptyIcon: {\n    type: IconValue,\n    default: '$ratingEmpty',\n  },\n  fullIcon: {\n    type: IconValue,\n    default: '$ratingFull',\n  },\n  halfIncrements: Boolean,\n  hover: Boolean,\n  length: {\n    type: [Number, String],\n    default: 5,\n  },\n  readonly: Boolean,\n  modelValue: {\n    type: [Number, String],\n    default: 0,\n  },\n  itemLabels: Array as Prop<string[]>,\n  itemLabelPosition: {\n    type: String,\n    default: 'top',\n    validator: (v: any) => ['top', 'bottom'].includes(v),\n  },\n  ripple: Boolean,\n\n  ...makeComponentProps(),\n  ...makeDensityProps(),\n  ...makeSizeProps(),\n  ...makeTagProps(),\n  ...makeThemeProps(),\n}, 'VRating')\n\nexport const VRating = genericComponent<VRatingSlots>()({\n  name: 'VRating',\n\n  props: makeVRatingProps(),\n\n  emits: {\n    'update:modelValue': (value: number | string) => true,\n  },\n\n  setup (props, { slots }) {\n    const { t } = useLocale()\n    const { themeClasses } = provideTheme(props)\n    const rating = useProxiedModel(props, 'modelValue')\n    const normalizedValue = computed(() => clamp(parseFloat(rating.value), 0, +props.length))\n\n    const range = computed(() => createRange(Number(props.length), 1))\n    const increments = computed(() => range.value.flatMap(v => props.halfIncrements ? [v - 0.5, v] : [v]))\n    const hoverIndex = shallowRef(-1)\n\n    const itemState = computed(() => increments.value.map(value => {\n      const isHovering = props.hover && hoverIndex.value > -1\n      const isFilled = normalizedValue.value >= value\n      const isHovered = hoverIndex.value >= value\n      const isFullIcon = isHovering ? isHovered : isFilled\n      const icon = isFullIcon ? props.fullIcon : props.emptyIcon\n      const activeColor = props.activeColor ?? props.color\n      const color = (isFilled || isHovered) ? activeColor : props.color\n\n      return { isFilled, isHovered, icon, color }\n    }))\n\n    const eventState = computed(() => [0, ...increments.value].map(value => {\n      function onMouseenter () {\n        hoverIndex.value = value\n      }\n\n      function onMouseleave () {\n        hoverIndex.value = -1\n      }\n\n      function onClick () {\n        if (props.disabled || props.readonly) return\n        rating.value = normalizedValue.value === value && props.clearable ? 0 : value\n      }\n\n      return {\n        onMouseenter: props.hover ? onMouseenter : undefined,\n        onMouseleave: props.hover ? onMouseleave : undefined,\n        onClick,\n      }\n    }))\n\n    const name = computed(() => props.name ?? `v-rating-${getUid()}`)\n\n    function VRatingItem ({ value, index, showStar = true }: { value: number, index: number, showStar?: boolean }) {\n      const { onMouseenter, onMouseleave, onClick } = eventState.value[index + 1]\n      const id = `${name.value}-${String(value).replace('.', '-')}`\n      const btnProps = {\n        color: itemState.value[index]?.color,\n        density: props.density,\n        disabled: props.disabled,\n        icon: itemState.value[index]?.icon,\n        ripple: props.ripple,\n        size: props.size,\n        variant: 'plain' as Variant,\n      }\n\n      return (\n        <>\n          <label\n            for={ id }\n            class={{\n              'v-rating__item--half': props.halfIncrements && value % 1 > 0,\n              'v-rating__item--full': props.halfIncrements && value % 1 === 0,\n            }}\n            onMouseenter={ onMouseenter }\n            onMouseleave={ onMouseleave }\n            onClick={ onClick }\n          >\n            <span class=\"v-rating__hidden\">{ t(props.itemAriaLabel, value, props.length) }</span>\n            {\n              !showStar ? undefined\n              : slots.item ? slots.item({\n                ...itemState.value[index],\n                props: btnProps,\n                value,\n                index,\n                rating: normalizedValue.value,\n              })\n              : (\n                <VBtn\n                  aria-label={ t(props.itemAriaLabel, value, props.length) }\n                  { ...btnProps }\n                />\n              )\n            }\n          </label>\n\n          <input\n            class=\"v-rating__hidden\"\n            name={ name.value }\n            id={ id }\n            type=\"radio\"\n            value={ value }\n            checked={ normalizedValue.value === value }\n            tabindex={ -1 }\n            readonly={ props.readonly }\n            disabled={ props.disabled }\n          />\n        </>\n      )\n    }\n\n    function createLabel (labelProps: { value: number, index: number, label?: string }) {\n      if (slots['item-label']) return slots['item-label'](labelProps)\n\n      if (labelProps.label) return <span>{ labelProps.label }</span>\n\n      return <span>&nbsp;</span>\n    }\n\n    useRender(() => {\n      const hasLabels = !!props.itemLabels?.length || slots['item-label']\n\n      return (\n        <props.tag\n          class={[\n            'v-rating',\n            {\n              'v-rating--hover': props.hover,\n              'v-rating--readonly': props.readonly,\n            },\n            themeClasses.value,\n            props.class,\n          ]}\n          style={ props.style }\n        >\n          <VRatingItem value={ 0 } index={ -1 } showStar={ false } />\n\n          { range.value.map((value, i) => (\n            <div class=\"v-rating__wrapper\">\n              {\n                hasLabels && props.itemLabelPosition === 'top'\n                  ? createLabel({ value, index: i, label: props.itemLabels?.[i] })\n                  : undefined\n              }\n              <div class=\"v-rating__item\">\n                { props.halfIncrements ? (\n                  <>\n                    <VRatingItem value={ value - 0.5 } index={ i * 2 } />\n                    <VRatingItem value={ value } index={ (i * 2) + 1 } />\n                  </>\n                ) : (\n                  <VRatingItem value={ value } index={ i } />\n                )}\n              </div>\n              {\n                hasLabels && props.itemLabelPosition === 'bottom'\n                  ? createLabel({ value, index: i, label: props.itemLabels?.[i] })\n                  : undefined\n              }\n            </div>\n          ))}\n        </props.tag>\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VRating = InstanceType<typeof VRating>\n"],
  "mappings": "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",
  "names": ["makeVRatingProps", "propsFactory", "name", "String", "itemAriaLabel", "type", "default", "activeColor", "color", "clearable", "Boolean", "disabled", "emptyIcon", "IconValue", "fullIcon", "halfIncrements", "hover", "length", "Number", "readonly", "modelValue", "itemLabels", "Array", "itemLabelPosition", "validator", "v", "includes", "ripple", "makeComponentProps", "makeDensityProps", "makeSizeProps", "makeTagProps", "makeThemeProps", "VRating", "genericComponent", "props", "emits", "value", "setup", "_ref", "slots", "t", "useLocale", "themeClasses", "provideTheme", "rating", "useProxiedModel", "normalizedValue", "computed", "clamp", "parseFloat", "range", "createRange", "increments", "flatMap", "hoverIndex", "shallowRef", "itemState", "map", "isHovering", "isFilled", "isHovered", "isFullIcon", "icon", "eventState", "onMouseenter", "onMouseleave", "onClick", "undefined", "getUid", "VRatingItem", "_ref2", "index", "showStar", "id", "replace", "btnProps", "density", "size", "variant", "_createVNode", "_Fragment", "item", "VBtn", "_mergeProps", "createLabel", "labelProps", "label", "_createTextVNode", "useRender", "hasLabels", "tag", "class", "style", "i"]
}
